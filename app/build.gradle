apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion(30)
    defaultConfig {
        applicationId = "com.bitwiserain.remindme"
        minSdkVersion(23)
        targetSdkVersion(30)
        versionCode = 3
        versionName = "0.2.0"
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
        }
    }
    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        androidTest.java.srcDirs += "src/androidTest"
        test.java.srcDirs += "/src/test"
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    // TODO: Workaround until coroutines issue fixed: https://github.com/Kotlin/kotlinx.coroutines/issues/2023
    packagingOptions {
        exclude("META-INF/AL2.0")
        exclude("META-INF/LGPL2.1")
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                useJUnitPlatform()
            }
        }
    }
}

dependencies {
    def room_version = "2.3.0"
    def coroutines_version = "1.5.0"
    def junit5_version = "5.7.2"
    def lifecycle_version = "2.3.1"

    implementation(fileTree(dir: "libs", include: ["*.jar"]))
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")
    implementation("androidx.appcompat:appcompat:1.3.1")
    implementation("androidx.core:core-ktx:1.6.0")
    implementation("androidx.constraintlayout:constraintlayout:2.1.0")
    implementation("androidx.recyclerview:recyclerview:1.2.1")
    implementation("androidx.legacy:legacy-support-v4:1.0.0")
    implementation("com.google.android.material:material:1.4.0")
    implementation("com.jakewharton.threetenabp:threetenabp:1.2.4")
    implementation("androidx.fragment:fragment-ktx:1.3.6")
    implementation("androidx.room:room-runtime:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    implementation("androidx.navigation:navigation-fragment-ktx:$navigation_version")
    implementation("androidx.navigation:navigation-ui-ktx:$navigation_version")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")

    kapt("androidx.room:room-compiler:$room_version")

    testImplementation("org.junit.jupiter:junit-jupiter-api:$junit5_version")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junit5_version")
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version")
    testImplementation("io.kotest:kotest-assertions-core-jvm:4.2.6") // Kotest core JVM assertions
}

tasks.withType(Test) {
    testLogging {
        events "passed", "skipped", "failed"
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println("\nTest result: ${result.resultType}")
            println("Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped")
        }
    }
}
